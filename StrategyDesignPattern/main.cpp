/* generated by dia/codegen.py
(NULL)

class IEating 
{
public:
	 virtual void eat() = 0; //Abstract class
};


(NULL)
class IQuacking 
{
public:
	 virtual void quack() = 0; //Abstract class
};

(NULL)
class IFlying 
{
public:
	 virtual void fly() = 0; //Abstract class
};

(NULL)
class EatFast : public IEating 
{
    public:
	void eat()
        {
            cout << "I eat really fast!!!" << endl;
        }
};

(NULL)
class NoEat : public IEating 
{
    public:
	void eat()
        {
            cout << "I do not eat." << endl;
        }
};

(NULL)
class EatSlow : public IEating 
{
    public:
	void eat()
        {
            cout << "I eat slow." << endl;
        }
};

(NULL)
class QuackLoud : public IQuacking 
{
    public:
        void quack()
        {
             cout << "I quack really loud!!!" << endl;
        }
};

(NULL)
class NoQuack : public IQuacking 
{
    public:
	 void quack()
         {
              cout << "I do not quack." << endl;
         }
};

(NULL)
class QuackSoft : public IQuacking 
{
    public:
	 void quack()
         {
              cout << "I quack soft." << endl;
         }
};

(NULL)
class NoFly : public IFlying 
{
    public:
        void fly()
        {
            cout << "I do not fly." << endl;
        }
};

(NULL)
class FlySlow : public IFlying 
{
    public:
        void fly()
        {
            cout << "I fly slow." << endl;
        }
};

(NULL)
class FlyFast : public IFlying 
{
    public:
        void fly()
        {
            cout << "I fly really fast!!!" << endl;
        }
};

(NULL)
class Duck 
{
    public:
        IFlying *fb;
        IQuacking *qb;
        IEating *eb;

        Duck()
        {
            qb = new NoQuack();
            fb = new NoFly();
            eb = new NoEat();
        }

        void performQuack()
        {
            qb->quack();
        }

        void setQuackBehaviour(IQuacking *qbnew)
	    {
	        cout << "Changing quack behaviour..." << endl;
			qb = qbnew;
	    }
 
	    void performFly()
	    {
	        fb->fly();
	    }
 
	    void setFlyBehaviour(IFlying *fbnew)
	    {
	        cout << "Changing fly behaviour..." << endl;
	        fb = fbnew;
	    }

        void performEat()
        {
            eb->eat();
        }

        void setEatBehaviour(IEating *ebnew)
	    {
	        cout << "Changing eat behaviour..." << endl;
			eb = ebnew;
	    }

        void display()
        {
            eb->eat();
            fb->fly();
            qb->quack();
        }
            
};*/
#include <iostream>
#include "Duck.h"
#include "src/QuackLoud.h"
#include "src/FlyFast.h"
#include "src/EatFast.h"

using namespace std;


int main()
{
    Duck * rubberDuck = new Duck();
    Duck * jetDuck = new Duck();
    jetDuck->setQuackBehaviour(new QuackLoud);
    jetDuck->setFlyBehaviour(new FlyFast);
    jetDuck->setEatBehaviour(new EatFast);
    rubberDuck->display();
    jetDuck->display();


    return 0;
}
